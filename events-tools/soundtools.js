var gdjs;(function(u){let c;(function(g){let l;(function(o){const a=new u.Logger("Audio events");o.getGlobalVolume=function(t){return t.getSoundManager().getGlobalVolume()},o.setGlobalVolume=function(t,n){t.getSoundManager().setGlobalVolume(n)},o.unloadAllAudio=function(t){t.getSoundManager().unloadAll()},o.playSound=function(t,n,e,i,s){t.getSoundManager().playSound(n,e,i,s)},o.playSoundOnChannel=function(t,n,e,i,s,r){t.getSoundManager().playSoundOnChannel(n,e,i,s,r)},o.stopSoundOnChannel=function(t,n){const e=t.getSoundManager().getSoundOnChannel(n);e?e.stop():a.error(`Cannot stop non-existing sound on channel ${n}.`)},o.pauseSoundOnChannel=function(t,n){const e=t.getSoundManager().getSoundOnChannel(n);e?e.pause():a.error(`Cannot pause non-existing sound on channel ${n}.`)},o.continueSoundOnChannel=function(t,n){const e=t.getSoundManager().getSoundOnChannel(n);e?e.playing()||e.play():a.error(`Cannot continue playing non-existing sound on channel ${n}.`)},o.isSoundOnChannelPlaying=function(t,n){const e=t.getSoundManager().getSoundOnChannel(n);return e?e.playing():!1},o.isSoundOnChannelPaused=function(t,n){const e=t.getSoundManager().getSoundOnChannel(n);return e?e.paused():(a.error(`Cannot check if non-existing sound on channel ${n} is paused.`),!1)},o.isSoundOnChannelStopped=function(t,n){const e=t.getSoundManager().getSoundOnChannel(n);return e?e.stopped():(a.error(`Cannot check if non-existing sound on channel ${n} is stopped.`),!0)},o.getSoundOnChannelVolume=function(t,n){const e=t.getSoundManager().getSoundOnChannel(n);return e?e.getVolume()*100:(a.error(`Cannot get the volume of a non-existing sound on channel ${n}.`),100)},o.setSoundOnChannelVolume=function(t,n,e){const i=t.getSoundManager().getSoundOnChannel(n);i?i.setVolume(e/100):a.error(`Cannot set the volume of a non-existing sound on channel ${n}.`)},o.getSoundOnChannelPlayingOffset=function(t,n){const e=t.getSoundManager().getSoundOnChannel(n);return e?e.getSeek():(a.error(`Cannot get the playing offset of a non-existing sound on channel ${n}.`),0)},o.setSoundOnChannelPlayingOffset=function(t,n,e){const i=t.getSoundManager().getSoundOnChannel(n);i?i.setSeek(e):a.error(`Cannot set the playing offset of a non-existing sound on channel ${n}.`)},o.getSoundOnChannelPitch=function(t,n){const e=t.getSoundManager().getSoundOnChannel(n);return e?e.getRate():(a.error(`Cannot get the pitch of a non-existing sound on channel ${n}.`),1)},o.setSoundOnChannelPitch=function(t,n,e){const i=t.getSoundManager().getSoundOnChannel(n);i?i.setRate(e):a.error(`Cannot get the pitch of a non-existing sound on channel ${n}.`)},o.preloadSound=(t,n)=>t.getSoundManager().loadAudio(n,!1),o.unloadSound=(t,n)=>t.getSoundManager().unloadAudio(n,!1),o.playMusic=function(t,n,e,i,s){t.getSoundManager().playMusic(n,e,i,s)},o.playMusicOnChannel=function(t,n,e,i,s,r){t.getSoundManager().playMusicOnChannel(n,e,i,s,r)},o.stopMusicOnChannel=function(t,n){const e=t.getSoundManager().getMusicOnChannel(n);e?e.stop():a.error(`Cannot stop a non-existing music on channel ${n}.`)},o.pauseMusicOnChannel=function(t,n){const e=t.getSoundManager().getMusicOnChannel(n);e?e.pause():a.error(`Cannot pause a non-existing music on channel ${n}.`)},o.continueMusicOnChannel=function(t,n){const e=t.getSoundManager().getMusicOnChannel(n);e?e.playing()||e.play():a.error(`Cannot stop a non-existing music on channel ${n}.`)},o.isMusicOnChannelPlaying=function(t,n){const e=t.getSoundManager().getMusicOnChannel(n);return e?e.playing():!1},o.isMusicOnChannelPaused=function(t,n){const e=t.getSoundManager().getMusicOnChannel(n);return e?e.paused():(a.error(`Cannot check if non-existing music on channel ${n} is paused.`),!1)},o.isMusicOnChannelStopped=function(t,n){const e=t.getSoundManager().getMusicOnChannel(n);return e?e.stopped():(a.error(`Cannot check if non-existing music on channel ${n} is stopped.`),!0)},o.getMusicOnChannelVolume=function(t,n){const e=t.getSoundManager().getMusicOnChannel(n);return e?e.getVolume()*100:(a.error(`Cannot get the volume of a non-existing music on channel ${n}.`),100)},o.setMusicOnChannelVolume=function(t,n,e){const i=t.getSoundManager().getMusicOnChannel(n);i?i.setVolume(e/100):a.error(`Cannot set the volume of a non-existing music on channel ${n}.`)},o.getMusicOnChannelPlayingOffset=function(t,n){const e=t.getSoundManager().getMusicOnChannel(n);return e?e.getSeek():(a.error(`Cannot get the playing offset of a non-existing music on channel ${n}.`),0)},o.setMusicOnChannelPlayingOffset=function(t,n,e){const i=t.getSoundManager().getMusicOnChannel(n);i?i.setSeek(e):a.error(`Cannot set the playing offset of a non-existing music on channel ${n}.`)},o.getMusicOnChannelPitch=function(t,n){const e=t.getSoundManager().getMusicOnChannel(n);return e?e.getRate():(a.error(`Cannot get the pitch of a non-existing music on channel ${n}.`),1)},o.setMusicOnChannelPitch=function(t,n,e){const i=t.getSoundManager().getMusicOnChannel(n);i?i.setRate(e):a.error(`Cannot get the pitch of a non-existing music on channel ${n}.`)},o.preloadMusic=(t,n)=>t.getSoundManager().loadAudio(n,!0),o.unloadMusic=(t,n)=>t.getSoundManager().unloadAudio(n,!0)})(l=g.sound||(g.sound={}))})(c=u.evtTools||(u.evtTools={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=soundtools.js.map
